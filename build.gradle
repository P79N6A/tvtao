// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: "config.gradle"

buildscript {
    repositories {
        mavenLocal()
        jcenter()
        maven {
            credentials {
                username "admin"
                password "screct"
            }
            url "http://mvnrepo.alibaba-inc.com/mvn/repository"
        }
    }
    configurations.all {
        resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }
    dependencies {
        classpath 'com.alibaba.gradle:gradle-solib-plugin:0.1.1'
//        classpath 'com.taobao.android:atlasplugin:2.3.3.beta2'
        classpath 'com.taobao.android:atlasplugin:2.3.3.rc70'
//        classpath 'com.taobao.android:aapt:2.3.1.rc4'
        classpath 'commons-codec:commons-codec:1.9' //加上commmons-codec依赖
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
        classpath 'com.jakewharton:butterknife-gradle-plugin:8.5.1'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        jcenter()
        maven {
            credentials {
                username "snapshotsAdmin"
                password "123456"
            }
            url "http://mvnrepo.alibaba-inc.com/nexus/content/repositories/snapshots/"
        }
        maven {
            credentials {
                username "admin"
                password "screct"
            }
            url "http://mvnrepo.alibaba-inc.com/mvn/repository"
        }
    }

//    apply from: 'http://gitlab.alibaba-inc.com/android-build-system/buildscript/raw/master/mtl-publish-2.3.gradle'
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

static String getEnvValue(key, defValue) {
    def val = System.getProperty(key);
    if (null != val) {
        return val;
    }
    val = System.getenv(key);
    if (null != val) {
        return val;
    }
    return defValue;
}
